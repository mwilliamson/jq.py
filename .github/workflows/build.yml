name: Build

on: [push, pull_request]

jobs:
  build_wheels_matrix:
    name: Generate matrix for building wheels
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:

      - uses: actions/checkout@v4

      - name: Use Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.20.0

      - id: set-matrix
        env:
          CIBW_ARCHS_LINUX: "auto aarch64"
          CIBW_ARCHS_MACOS: "auto"
          CIBW_SKIP: "cp36-win_amd64 cp36-win32 pp*-win_amd64 pp*-win32"
        run: |
          MATRIX=$(
            {
              CIBW_ARCHS_WINDOWS=x86 cibuildwheel --print-build-identifiers --platform windows \
                | sed 's/.*/{"cibw-only": "&", "os": "windows-2022", "arch": "x86" }/'
            } | jq --slurp --compact-output '{"include": .}'
          )
          echo matrix="$MATRIX" >> $GITHUB_OUTPUT

  build_wheels:
    name: Build ${{ matrix.cibw-only }} wheel

    needs: build_wheels_matrix

    strategy:
      matrix: ${{ fromJson(needs.build_wheels_matrix.outputs.matrix) }}

    runs-on: ${{ matrix.os }}

    steps:

    - name: Check whether to build wheel
      id: should-build-wheel
      if: |
        (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')) ||
        matrix.cibw-only == 'cp310-manylinux_x86_64' ||
        matrix.cibw-only == 'cp310-win_amd64' ||
        matrix.cibw-only == 'cp310-win32'
      shell: bash
      run: echo true=1 >> $GITHUB_OUTPUT

    - uses: actions/checkout@v4
      if: steps.should-build-wheel.outputs.true

    - name: Set up MSYS2
      if: steps.should-build-wheel.outputs.true && runner.os == 'Windows'
      uses: ./.github/actions/setup-msys2
      with:
        arch: ${{ matrix.arch }}

    - name: Set up QEMU
      if: steps.should-build-wheel.outputs.true && runner.os == 'Linux'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    - name: Build wheels
      if: steps.should-build-wheel.outputs.true
      uses: pypa/cibuildwheel@v2.20.0
      with:
        only: ${{ matrix.cibw-only }}
      env:
        CIBW_ENVIRONMENT: ${{ runner.os == 'Windows' && matrix.arch == 'x86' && 'CC=i686-w64-mingw32-gcc.exe' || '' }}

    - uses: actions/upload-artifact@v4
      if: steps.should-build-wheel.outputs.true
      with:
        name: dist-wheel-${{ matrix.cibw-only }}
        path: ./wheelhouse/*.whl
