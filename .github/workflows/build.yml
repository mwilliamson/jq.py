name: Build

on: [push, pull_request]

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9, "3.10", "3.11-dev", pypy3]

    steps:

    - uses: actions/checkout@v3

    - name: Use Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - run: pip install tox virtualenv

    - run: "make jq.c"

    - run: tox -e py

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Use Python 3.7
        with:
          python-version: '3.7'

      - run: make jq.c

      - run: pip install build twine

      - name: Build sdist
        run: python -m build --sdist

      - name: Check metadata
        run: python -m twine check dist/*

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_wheels_matrix:
    name: Generate matrix for building wheels
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:

      - uses: actions/checkout@v2

      - name: Use Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.9.0

      - id: set-matrix
        run: >
           MATRIX=$({
            cibuildwheel --print-build-identifiers --platform linux
              | sed 's/^.*$/{"only": "&", "os": "ubuntu-latest"}/g'
            && cibuildwheel --print-build-identifiers --platform macos
              | sed 's/^.*$/{"only": "&", "os": "macos-latest"}/g'
           } | jq -s -c)
           echo ::set-output name=matrix::"$MATRIX"

  build_wheels:
    name: Build ${{ matrix.only }} wheel

    needs: build_wheels_matrix
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')

    strategy:
      matrix: ${{ fromJson(needs.build_wheels_matrix.outputs.matrix) }}

    steps:

    - uses: actions/checkout@v2

    - name: Use Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.9.0
      with:
        only: ${{ matrix.only }}
      env:
        CIBW_BEFORE_BUILD: "pip install cython==0.29.32 && cython {project}/jq.pyx"
        CIBW_TEST_REQUIRES: "-r test-requirements.txt"
        CIBW_TEST_COMMAND: "py.test {project}/tests"

    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl
